<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
      "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- UserMapper.xml :: SQL 를 갖는 MetaData - MyBatis Framework 은 XML MetaData 
   를 사용 SQL구문을 관리 (SQL은 xml 을 통해 적절히 캡슐화 되어 애플리케이선 외부로 분리함) - SQL문의 입력(?) / 
   출력(?)을 매핑한다. <== 아래의 select element 참조 -->

<mapper namespace="UserMapper07">

   <!-- SELECT 매핑 구문에서 사용할 ResultSet과 바인딩 될 비즈니스 객체 명시적 정의 -->
   
   <resultMap id="userSelectMap"   type="user"  >
      <result property="userId"  column= "user_id" jdbcType = "VARCHAR"/>
      <result property="userName"  column= "user_name" jdbcType = "VARCHAR"/>
      <result property="password"  column= "password" jdbcType = "VARCHAR"/>
      <result property="age"  column= "age" jdbcType = "INTEGER"/>
      <result property="grade"  column= "grade" jdbcType = "NUMERIC"/>
      <result property="regDate"  column= "reg_date" jdbcType = "DATE"/>
   </resultMap>
   
   <!-- dynamic SQL :: <where> element 
   <select id="getUserList01" parameterType="user" resultMap = "userSelectMap">
      SELECT
      user_id , user_name , password , age , grade , reg_date
      FROM users
      <where>
         <if test = "userName !=null"> user_name = #{userName} </if>
         <if test = "age !=null"> AND age = #{age} </if>
      </where>   
      ORDER BY user_id DESC
   </select>
   -->
   
   <!-- dynamic SQL :: <where> element는 <trim>element로 변경가능 -->
   <select id="getUserList01" parameterType="user" resultMap = "userSelectMap">
      SELECT
      user_id , user_name , password , age , grade , reg_date
      FROM users
      <!-- prefix : 접두어 / prefixOverrides : AND or OR로 시작하면 무시 -->
      <trim prefix="WHERE" prefixOverrides="AND|OR">
         <if test = "userName != null">
            user_name = #{userName}
         </if>
         <if test = "age != null">
            AND age = #{age}
         </if>
      </trim>   
      ORDER BY user_id DESC
   </select>
   
   <!-- dynamic SQL :: <where> element
   <select id="getUserList02" parameterType="user" resultMap = "userSelectMap">
      SELECT
      user_id , user_name , password , age , grade , reg_date
      FROM users
      <where>
         <if test = "grade != 0">
            grade = #{grade}
         </if>
         <if test = "grade == 0">
            grade IS NULL
         </if>
         <if test = "age != null">
            OR age = #{age}
         </if>
         <if test = "age == null ">
            OR reg_date IS NULL
         </if>
         <if test = "age == null and regDate ==null">
            OR reg_date IS NULL
         </if>
      </where>   
      ORDER BY user_id DESC
    </select>
	-->
    
    <!-- dynamic SQL :: <where> element는 <trim> elements로 변경가능 -->
    <select id="getUserList02" parameterType="user" resultMap = "userSelectMap">
      SELECT
      user_id , user_name , password , age , grade , reg_date
      FROM users
      <!-- prefix : 접두어 / prefixOverrides : AND or OR로 시작하면 무시 -->
      <trim prefix="WHERE" prefixOverrides="AND|OR">
         <if test = "grade != 0">
            grade = #{grade}
         </if>
         <if test = "grade == 0">
            grade IS NULL
         </if>
         <if test = "age != null">
            OR age = #{age}
         </if>
         <if test = "age == null ">
            OR reg_date IS NULL
         </if>
         <if test = "age == null and regDate ==null">
            OR reg_date IS NULL
         </if>
      </trim>   
      ORDER BY user_id DESC
   </select>
   
   <!-- INSERT 매핑 구문 (insert SQL 등록) :: insert element -->
   <insert id="addUser" parameterType="user">
      INSERT
      INTO users( user_id , user_name , password , age , grade , reg_date)
      VALUES(      #{userId} ,
                  #{userName} ,
                  #{password} ,
                  #{age:INTEGER} ,
                        <if test="grade == 0 "> null</if>
                        <if test="grade  != 0 ">#{grade}</if> ,
                  #{regDate:DATE} )
   </insert>
   
   <!-- DELETE 매핑 구문 (insert SQL 등록) :: delete element -->
   <delete id="removeUser" parameterType="java.lang.String">
      DELETE
      FROM users
      WHERE user_id = #{value}
   </delete>
   
</mapper>